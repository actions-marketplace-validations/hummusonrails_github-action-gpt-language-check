name: 'Review Markdown for Discriminatory Language with ChatGPT'
description: 'Reviews Markdown files in pull requests for potentially discriminatory language and provides suggestions for improvements'
author: 'Ben Greenberg'
branding:
  icon: 'align-left'
  color: 'green'
inputs:
  openai_api_key:
    description: 'OpenAI API key for accessing the GPT model'
    required: true
  github_token:
    description: 'GitHub token for accessing the repository and pull request information'
    required: true
outputs:
  suggestions:
    description: 'A list of suggestions for improving the Markdown files in the pull request'
runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download pre-built Rust script from remote repository
      run: |
        # Fetch the latest release information from the GitHub API
        release_info=$(curl -s -H "Accept: application/vnd.github+json" https://api.github.com/repos/hummusonrails/github-action-gpt-language-check/releases/latest)
        
        # Extract the binary's download URL using 'jq' 
        binary_url=$(echo $release_info | jq -r '.assets[] | select(.name == "github-action-gpt-language-check") | .browser_download_url')

        # Download the binary using 'wget'
        wget "$binary_url" -O github-action-gpt-language-check

        # Make the binary executable
        chmod +x github-action-gpt-language-check
      shell: bash

    - name: Run Rust script for each markdown file
      env:
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        suggestions=""
        pr_files=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.number }}/files | jq -r '.[].filename')
        for file in $pr_files; do
          if [[ $file == *.md ]]; then
            echo "Reviewing: $file"
            suggestion=$(./github-action-gpt-language-check "$file")
            if [[ ! -z "$suggestion" ]]; then
              suggestions+="- $file: $suggestion\n"
              echo "Suggestion found"
              echo "SUGGESTION_FOUND=true" >> $GITHUB_ENV
            fi
          fi
        done
        # Use printf to set SUGGESTIONS environment variable
        printf 'SUGGESTIONS<<EOF\n%s\nEOF' "$suggestions" >> $GITHUB_ENV

    - name: Add a comment to the pull request
      if: ${{ env.SUGGESTION_FOUND == 'true' }}
      uses: actions/github-script@v5
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const suggestionsList = process.env.SUGGESTIONS.split('\n').filter(suggestion => suggestion.trim() !== '');
          let suggestionsMarkdown = '## Suggested Changes\n';
          for (const suggestion of suggestionsList) {
            const [file, ...suggestionText] = suggestion.split(':');
            suggestionsMarkdown += `### Reviewed File: **${file.trim()}**\n\n`;
            suggestionsMarkdown += `- ${suggestionText.join(':').trim()}\n\n`;
          }
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: suggestionsMarkdown
          });
